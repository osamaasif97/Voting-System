package main

import (
	"fmt"
	"os"
	"bufio"
	"log"
)

type voter struct{
	name string
	id int8
	vote string
}
type party struct{
	PTI int8
	PMLN int8
	PPPP int8
	MQM int8
}

func main(){

	caster := voter {"",0,""}   //intializing structure
	standing := party{0,0,0,0}
	
	file2, err := os.Open("result.txt")    //Opening last saved file
	scanner := bufio.NewScanner(file2)
	for scanner.Scan() {             
        fmt.Println(scanner.Text())       //Printing file
    }
	
	file, err := os.Create("result.txt")  //create fil
    if err != nil {
        log.Fatal("Cannot create file", err)
    }
    defer file.Close()
	
	i:=0
	m:=1
	for i<100{
		fmt.Println("\n Welcome to the Electronic Voting System.\n")
	
		fmt.Print("\n Please Enter your full name.: \n")
		reader := bufio.NewReader(os.Stdin)
		text, _ := reader.ReadString('\n')
		caster.name=text
		fmt.Println("\nEnter Your ID")
		fmt.Scanln(&caster.id)
		fmt.Println("\n Please Select the party you want to vote")
		fmt.Println("1) PTI",
					"\n2) PMLN",
					"\n3) PPPP",
					"\n4) MQM")
		fmt.Scanln(&caster.vote)
	
		fmt.Println("\nPlease Confirm Your Data: ")
		fmt.Println("\nYour Name:", caster.name,
					"\nYour ID:", caster.id,
					"\nYour selected party:", caster.vote)
		
		switch{
			case caster.vote=="PTI":
				standing.PTI++
			case caster.vote=="PMLN":
				standing.PMLN++
			case caster.vote=="PPPP":
				standing.PPPP++
			case caster.vote=="MQM":
				standing.MQM++
		}
		
		fmt.Fprintf(file, "\r\nVoter #%d\r\n",m)
		fmt.Fprintf(file, "	Name: %s\r\n",caster.name)
		fmt.Fprintf(file,"	ID : %d\r\n",caster.id,)
		fmt.Fprintf(file,"	Vote : %s\r\n",caster.vote)
		fmt.Fprintf(file,"	\r\nTotal Poling result\r\n")
		fmt.Fprintf(file,"	PTI: %d\r\n",standing.PTI)
		fmt.Fprintf(file,"	PMLN: %d\r\n",standing.PMLN)
		fmt.Fprintf(file,"	PPPP: %d\r\n",standing.PPPP)
		fmt.Fprintf(file,"	MQM: %d\r\n",standing.MQM)
		
		var des int
		fmt.Println("\nEnter 1 to continue...")
		fmt.Scanln(&des)   //Enter 2 to exit and see results
		if des==2{ break }
		m++
	}

	fmt.Println("\nVoting Result:\n")
	fmt.Println("Votes for PTI: ", standing.PTI,
				"\nVotes for PMLN: ",standing.PMLN,
				"\nVotes for PPPP: ", standing.PPPP,
				"\nVotes for MQM: ", standing.MQM, "\n\n")
	
	if standing.PTI > (standing.PMLN + standing.PPPP + standing.MQM)/4{
		fmt.Println("PTI is wining the General Elections with ",standing.PTI, "votes!!")
	}
	if standing.PMLN > (standing.PTI + standing.PPPP + standing.MQM)/4{
		fmt.Println("PMLN is wining the General Elections with ",standing.PMLN, "votes!!")
	}
	if standing.PPPP > (standing.PTI + standing.PMLN + standing.MQM)/4{
		fmt.Println("PPPP is wining the General Elections with ",standing.PPPP, "votes!!")
	}
	if standing.MQM > (standing.PTI + standing.PMLN + standing.PPPP)/4{
		fmt.Println("MQM is wining the General Elections with ",standing.MQM, "votes!!")
	}
	
}
